version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydatabase" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/uploads:/app/uploads
    environment:
      - PYTHONUNBUFFERED=1
      - JWT_SECRET_KEY=your_jwt_secret_key_here
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    restart: always
    networks:
      - app-network

  rag:
    build:
      context: ./rag
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./rag/app:/app/app
      - ./rag/data:/app/data
      - ./rag/models:/app/models
    environment:
      - PYTHONUNBUFFERED=1
      - OLLAMA_HOST=http://ollama:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    depends_on:
      - ollama
    restart: always
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  ollama_data:
